{"ast":null,"code":"var _jsxFileName = \"/Users/sexyboi/Desktop/File/Code/to-do 2024/todo/src/Components/List.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function List() {\n//   const [rows, setRows] = useState([]);\n//   const [newText, setNewText] = useState('');\n\n//   const addRow = () => {\n//     if (newText.trim() !== '') { // Prevent adding empty rows\n//       setRows([...rows, { text: newText }]);\n//       setNewText(''); \n//     }\n//   };\n\n//   return (\n//     <div className=\"relative p-4 border rounded-md shadow-md\">\n//       <button \n//         className=\"absolute top-2 right-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded\" \n//         onClick={addRow}\n//       >\n//         Add Row\n//       </button>\n\n//       <ul>\n//         {rows.map((row, index) => (\n//           <li key={index} className=\"mb-2\">\n//             {row.text}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <input \n//         type=\"text\" \n//         className=\"border rounded-md p-2 w-full mt-4\" \n//         placeholder=\"Enter text for new row\"\n//         value={newText}\n//         onChange={(e) => setNewText(e.target.value)}\n//       />\n//     </div>\n//   );\n// }\n\n// export default List;\nimport React, { useState } from 'react';\nimport { Card } from 'flowbite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  const [rows, setRows] = useState([]);\n  const [newText, setNewText] = useState('');\n  const addRow = () => {\n    if (newText.trim() !== '') {\n      // Prevent adding empty rows\n      setRows([...rows, newText]);\n      setNewText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white shadow-md rounded-md p-4 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"absolute top-2 right-2 bg-blue-500 text-white rounded-md px-3 py-2 hover:bg-blue-600\",\n      onClick: addRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rows.map((text, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"bg-black text-white\",\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"mt-4 w-full border rounded-md p-2 focus:outline-none focus:border-blue-500\",\n      placeholder: \"Enter text for new row\",\n      value: newText,\n      onChange: e => setNewText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"x7cMGHFeNwwm+EV0gS3shFoiLEc=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","List","_s","rows","setRows","newText","setNewText","addRow","trim","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","text","index","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sexyboi/Desktop/File/Code/to-do 2024/todo/src/Components/List.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function List() {\n//   const [rows, setRows] = useState([]);\n//   const [newText, setNewText] = useState('');\n\n//   const addRow = () => {\n//     if (newText.trim() !== '') { // Prevent adding empty rows\n//       setRows([...rows, { text: newText }]);\n//       setNewText(''); \n//     }\n//   };\n\n//   return (\n//     <div className=\"relative p-4 border rounded-md shadow-md\">\n//       <button \n//         className=\"absolute top-2 right-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded\" \n//         onClick={addRow}\n//       >\n//         Add Row\n//       </button>\n\n//       <ul>\n//         {rows.map((row, index) => (\n//           <li key={index} className=\"mb-2\">\n//             {row.text}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <input \n//         type=\"text\" \n//         className=\"border rounded-md p-2 w-full mt-4\" \n//         placeholder=\"Enter text for new row\"\n//         value={newText}\n//         onChange={(e) => setNewText(e.target.value)}\n//       />\n//     </div>\n//   );\n// }\n\n// export default List;\nimport React, { useState } from 'react';\nimport { Card } from 'flowbite';\n\n\n\nfunction List() {\n  const [rows, setRows] = useState([]);\n  const [newText, setNewText] = useState('');\n\n  const addRow = () => {\n    if (newText.trim() !== '') { // Prevent adding empty rows\n      setRows([...rows, newText]);\n      setNewText(''); \n    }\n  };\n\n  return (\n    <div className=\"bg-white shadow-md rounded-md p-4 relative\">\n      <button \n        className=\"absolute top-2 right-2 bg-blue-500 text-white rounded-md px-3 py-2 hover:bg-blue-600\"\n        onClick={addRow}\n      >\n        Add Row\n      </button>\n\n      <ul>\n        {rows.map((text, index) => (\n          <li key={index}>\n            <Card className=\"bg-black text-white\" >\n                {text}\n            </Card>\n          </li>\n        ))}\n      </ul>\n\n      <input\n        type=\"text\"\n        className=\"mt-4 w-full border rounded-md p-2 focus:outline-none focus:border-blue-500\"\n        placeholder=\"Enter text for new row\"\n        value={newText}\n        onChange={(e) => setNewText(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default List;\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,MAAM,GAAGA,CAAA,KAAM;IACnB,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAAE;MAC3BJ,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEE,OAAO,CAAC,CAAC;MAC3BC,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,4CAA4C;IAAAC,QAAA,gBACzDV,OAAA;MACES,SAAS,EAAC,sFAAsF;MAChGE,OAAO,EAAEJ,MAAO;MAAAG,QAAA,EACjB;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETf,OAAA;MAAAU,QAAA,EACGP,IAAI,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBlB,OAAA;QAAAU,QAAA,eACEV,OAAA,CAACF,IAAI;UAACW,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAChCO;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GAHAG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELf,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXV,SAAS,EAAC,4EAA4E;MACtFW,WAAW,EAAC,wBAAwB;MACpCC,KAAK,EAAEhB,OAAQ;MACfiB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACb,EAAA,CAvCQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAyCb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}