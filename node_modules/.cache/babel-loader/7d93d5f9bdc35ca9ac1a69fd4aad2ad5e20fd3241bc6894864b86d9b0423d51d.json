{"ast":null,"code":"// import React, { useState } from 'react';\n// function List() {\n//   const [rows, setRows] = useState([]);\n//   const [newText, setNewText] = useState('');\n//   const addRow = () => {\n//     if (newText.trim() !== '') { // Prevent adding empty rows\n//       setRows([...rows, { text: newText }]);\n//       setNewText(''); \n//     }\n//   };\n//   return (\n//     <div className=\"relative p-4 border rounded-md shadow-md\">\n//       <button \n//         className=\"absolute top-2 right-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded\" \n//         onClick={addRow}\n//       >\n//         Add Row\n//       </button>\n//       <ul>\n//         {rows.map((row, index) => (\n//           <li key={index} className=\"mb-2\">\n//             {row.text}\n//           </li>\n//         ))}\n//       </ul>\n//       <input \n//         type=\"text\" \n//         className=\"border rounded-md p-2 w-full mt-4\" \n//         placeholder=\"Enter text for new row\"\n//         value={newText}\n//         onChange={(e) => setNewText(e.target.value)}\n//       />\n//     </div>\n//   );\n// }\n// export default List;\nimport React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function List(){const[rows,setRows]=useState([]);const[newText,setNewText]=useState('');const addRow=()=>{if(newText.trim()!==''){// Prevent adding empty rows\nsetRows([...rows,newText]);setNewText('');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white shadow-md rounded-md p-4 relative\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"absolute top-2 right-2 bg-blue-500 text-white rounded-md px-3 py-2 hover:bg-blue-600\",onClick:addRow,children:\"Add Row\"}),/*#__PURE__*/_jsx(\"ul\",{children:rows.map((text,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"bg-black rounded-full px-4 py-2 my-2 text-white shadow-lg\",children:text},index))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"mt-4 w-full border rounded-md p-2 focus:outline-none focus:border-blue-500\",placeholder:\"Enter text for new row\",value:newText,onChange:e=>setNewText(e.target.value)})]});}export default List;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","List","rows","setRows","newText","setNewText","addRow","trim","className","children","onClick","map","text","index","type","placeholder","value","onChange","e","target"],"sources":["/Users/sexyboi/Desktop/File/Code/to-do 2024/todo/src/Components/List.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function List() {\n//   const [rows, setRows] = useState([]);\n//   const [newText, setNewText] = useState('');\n\n//   const addRow = () => {\n//     if (newText.trim() !== '') { // Prevent adding empty rows\n//       setRows([...rows, { text: newText }]);\n//       setNewText(''); \n//     }\n//   };\n\n//   return (\n//     <div className=\"relative p-4 border rounded-md shadow-md\">\n//       <button \n//         className=\"absolute top-2 right-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded\" \n//         onClick={addRow}\n//       >\n//         Add Row\n//       </button>\n\n//       <ul>\n//         {rows.map((row, index) => (\n//           <li key={index} className=\"mb-2\">\n//             {row.text}\n//           </li>\n//         ))}\n//       </ul>\n\n//       <input \n//         type=\"text\" \n//         className=\"border rounded-md p-2 w-full mt-4\" \n//         placeholder=\"Enter text for new row\"\n//         value={newText}\n//         onChange={(e) => setNewText(e.target.value)}\n//       />\n//     </div>\n//   );\n// }\n\n// export default List;\nimport React, { useState } from 'react';\n\nfunction List() {\n  const [rows, setRows] = useState([]);\n  const [newText, setNewText] = useState('');\n\n  const addRow = () => {\n    if (newText.trim() !== '') { // Prevent adding empty rows\n      setRows([...rows, newText]);\n      setNewText(''); \n    }\n  };\n\n  return (\n    <div className=\"bg-white shadow-md rounded-md p-4 relative\">\n      <button \n        className=\"absolute top-2 right-2 bg-blue-500 text-white rounded-md px-3 py-2 hover:bg-blue-600\"\n        onClick={addRow}\n      >\n        Add Row\n      </button>\n\n      <ul>\n        {rows.map((text, index) => (\n          <li key={index} className=\"bg-black rounded-full px-4 py-2 my-2 text-white shadow-lg\">\n            {text}\n          </li>\n        ))}\n      </ul>\n\n      <input\n        type=\"text\"\n        className=\"mt-4 w-full border rounded-md p-2 focus:outline-none focus:border-blue-500\"\n        placeholder=\"Enter text for new row\"\n        value={newText}\n        onChange={(e) => setNewText(e.target.value)}\n      />\n    </div>\n  );\n}\n\nexport default List;\n"],"mappings":"AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACnB,GAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CAAE;AAC3BJ,OAAO,CAAC,CAAC,GAAGD,IAAI,CAAEE,OAAO,CAAC,CAAC,CAC3BC,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CAAC,CAED,mBACEL,KAAA,QAAKQ,SAAS,CAAC,4CAA4C,CAAAC,QAAA,eACzDX,IAAA,WACEU,SAAS,CAAC,sFAAsF,CAChGE,OAAO,CAAEJ,MAAO,CAAAG,QAAA,CACjB,SAED,CAAQ,CAAC,cAETX,IAAA,OAAAW,QAAA,CACGP,IAAI,CAACS,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACpBf,IAAA,OAAgBU,SAAS,CAAC,2DAA2D,CAAAC,QAAA,CAClFG,IAAI,EADEC,KAEL,CACL,CAAC,CACA,CAAC,cAELf,IAAA,UACEgB,IAAI,CAAC,MAAM,CACXN,SAAS,CAAC,4EAA4E,CACtFO,WAAW,CAAC,wBAAwB,CACpCC,KAAK,CAAEZ,OAAQ,CACfa,QAAQ,CAAGC,CAAC,EAAKb,UAAU,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC7C,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAf,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}